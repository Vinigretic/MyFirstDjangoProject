# Views
# Передача доп аргументов

# def products(request, product_id = 0): # передаем в функцию доп аргумент со значением по умолчанию, можно
                                         # передавать так же без значения по умолчанию
#     output = '<h2>product № {0}</h2>'.format(product_id)  # создаем переменную которая принимает аргумент
                                                            # и описываем его в HTML теге, с помощью метода формат
#     output = f'<h2>product № {product_id}</h2>' # создаем переменную которая принимает аргумент
                                                  # и описываем его в HTML теге, с помощью f строки
#     return HttpResponse(output)  # возвращаем переменную

# Urls

# urlpatterns = [
#     path('products/', views.products),  # описываем путь к views, с аргументом по умолчанию, это делаем всегда
                                          # когда у нас есть такой аргумент
#     path('products/<int:product_id>/', views.products), # описываем путь к views, с доп аргументом
#     path('users/', views.users),
#     path('users/<int:id>/<name>/', views.users),
#     path('contacts/', views.contacts),
#     path('contacts/<int:id>/<name>/<phone_number>/', views.contacts), # все аргументы прописываем через /
#     path('admin/', admin.site.urls),
# ]

# параметры в url передаются в <>
# необходимо указывать тип данных(строку не прописываем идет по умолчанию)
# str: соответствует любой строке которая не содержит символа "/". Если спецификатор не указан, то используется
# по умолчанию
# int: соответствует любому положительному числу
# slug: соответствует последовательности буквенных символов ASCII, цифр, дефиса и символа подчеркивания, например,
# building-your-1st-django-site
# uuid: сооветствует идентификатору UUID, например, 075194d3-6885-417e-a8a8-6c931e272f00
# path: соответствует любой строке, которая также может включать символ "/" в отличие от спецификатора str
